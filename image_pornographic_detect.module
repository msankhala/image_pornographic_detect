<?php

/**
 * @file
 * Image pornographic detect.
 * Provide option for pornographic image detection for image field.
 */

require_once dirname(__FILE__) . '/image_pornographic_detect.field.inc';

/**
 * Implements hook_menu().
 */
function image_pornographic_detect_menu() {
  $items['admin/config/media/image-pornographic-detect'] = array(
    'title' => 'Image Pornographic Detection settings',
    'description' => 'Configure Image Pornographic Detection library options.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('image_pornographic_detect_admin_settings_form'),
    'access arguments' => array('administer image pornographic detect'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'image_pornographic_detect.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function image_pornographic_detect_permission() {
  return array(
    'administer image pornographic detect' => array(
      'title' => t('Administer image pornographic detect settings'),
      'description' => t('Configure image pornographic detect settings.'),
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function image_pornographic_detect_libraries_info() {
  $libraries['php-nudity-detector'] = array(
    'name' => 'Php Nudity Detector',
    'vendor url' => 'https://github.com/FreebieStock/php-nudity-detector',
    'download url' => 'https://github.com/FreebieStock/php-nudity-detector/archive/master.zip',
    // Version information is not specified in library so providing one.
    'version' => '1.0',
    'files' => array(
       // For PHP libraries, specify include files here, still relative to the
       // library path.
      'php' => array(
        'lib/Autoloader.php',
      ),
    ),
  );
  $libraries['image-nudity-filter'] = array(
    'name' => 'Image Nudity Filter',
    'vendor url' => 'http://www.phpclasses.org/package/3269-PHP-Determine-whether-an-image-may-contain-nudity.html',
    'download url' => 'http://www.phpclasses.org/package/3269-PHP-Determine-whether-an-image-may-contain-nudity.html#download',
    'version arguments' => array(
      'file' => 'class.ImageFilter.php',
      'pattern' => '/Image Filter v(\s+\d+\.+\d+)/',
      'lines' => 8,
    ),
    'files' => array(
      'php' => array(
        'class.ImageFilter.php',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_form_FORM_ID_alter() for user_admin_settings().
 * 
 * Add user profile image pornographic detect setting on the user settings page.
 * @see user_admin_settings()
 */
function image_pornographic_detect_form_user_admin_settings_alter(&$form, &$form_state, $form_id) {
  global $base_url;
  $form['personalization']['pictures']['user_picture_pornographic_detect'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Image Pornographic Detect'),
    '#description' => t('This settig will enable the pornographic detection when user upload an image. If this option is checked and user upload a pornographic image this will restrict the uploading of image and will show a message. You can configure more options <a href="@pornographic_detect_setting">here</a>.', array('@pornographic_detect_setting' => $base_url . base_path() . 'admin/config/media/image-pornographic-detect')),
    '#default_value' => variable_get('user_picture_pornographic_detect', 1)
  );
}

/**
 * Implements hook_form_alter().
 */
function image_pornographic_detect_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  $form['#validate'][] = 'image_pornographic_detect_user_picture_validate';
}

/**
 * Implements hook_field_attach_validate().
 */
function image_pornographic_detect_user_picture_validate($form, &$form_state) {
  $user_picture_pornographic_detect = variable_get('user_picture_pornographic_detect', 1);
  if ($user_picture_pornographic_detect) {
    $image_pornographic_detect_active_library = variable_get('image_pornographic_detect_active_library', 'php-nudity-detector');
    $temp_file_url = !empty($form_state['values']['picture_upload']) ? drupal_realpath($form_state['values']['picture_upload']->uri) : '';
    if (($library_found = libraries_detect($image_pornographic_detect_active_library)) && !empty($library_found['installed']) && !empty($temp_file_url)) {
      $is_porn = image_pornographic_detect_checkporn($image_pornographic_detect_active_library, $temp_file_url);
      if ($is_porn) {
        $warning_message = variable_get('image_pornographic_detect_warning_message', '');
        form_set_error('picture_upload', $warning_message);
      }
    }
  }
}
